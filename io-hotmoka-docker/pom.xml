<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>io-hotmoka-docker</artifactId>
  <packaging>jar</packaging>
  <name>io-hotmoka-docker</name>
  <version>${hotmoka.version}</version>
  <description>This module creates the Docker images for managing Hotmoka nodes.</description>

  <parent>
    <groupId>io.hotmoka</groupId>
    <artifactId>hotmoka</artifactId>
    <version>parent</version>
  </parent>

  <dependencies>

    <!-- we use moka inside the docker container -->
    <dependency>
      <groupId>io.hotmoka</groupId>
      <artifactId>io-hotmoka-moka</artifactId>
      <version>${hotmoka.version}</version>
    </dependency>

	<!-- we install this jar inside the blockchains, hence we need it -->
    <dependency>
      <groupId>io.hotmoka</groupId>
      <artifactId>io-takamaka-code</artifactId>
      <version>${io.takamaka.code.version}</version>
    </dependency>

    <!-- we use mokamint-plotter inside the docker container -->
    <dependency>
      <groupId>io.mokamint</groupId>
      <artifactId>io-mokamint-plotter-cli</artifactId>
      <version>${mokamint.version}</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.2.0</version>
	    <configuration>
	      <failOnError>false</failOnError>
	      <filesets>
	        <fileset>
	          <directory>modules</directory>
	          <includes>
	            <include>**/*</include>
	          </includes>
	          <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
	    </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
	  <!-- useless to install this module in the local Maven repository -->
	  <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <skip>true</skip>
        </configuration>
	  </plugin>
      <!-- no reason to javadoc this module -->
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <!-- attempt to use 3.5.0 runs into a compilation error in Eclipse -->
        <version>3.3.0</version>
        <configuration>
		  <includeScope>
		    runtime <!-- so that test or provided dependencies are not considered -->
		  </includeScope>
		</configuration>
        <executions>
          <execution>
            <id>copy-unnamed-modules</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>./modules/unnamed</outputDirectory>
              <includeArtifactIds>
                animal-sniffer-annotations,
                annotations,
                checker-qual,
                commons-compress,
                commons-lang3,
                error_prone_annotations,
                failureaccess,
                grpc-api,
                grpc-context,
                grpc-core,
                grpc-netty-shaded,
                grpc-protobuf,
                grpc-protobuf-lite,
                guava,
                j2objc-annotations,
                jsr305,
                kotlin-logging,
                kotlin-stdlib,
                kotlin-stdlib-common,
                listenablefuture,
                perfmark-api,
                proto-google-common-protos,
                slf4j-api,
                slf4j-nop,
                xodus-compress,
                xodus-environment,
                xodus-openAPI,
                xodus-utils
			  </includeArtifactIds>
            </configuration>
          </execution>
          <execution>
            <id>copy-explicit-or-automatic-modules</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>./modules/explicit_or_automatic</outputDirectory>
              <excludeArtifactIds>
                <!-- we exclude all unnamed modules -->
                animal-sniffer-annotations,
                annotations,
                checker-qual,
                commons-compress,
                commons-lang3,
                error_prone_annotations,
                failureaccess,
                grpc-api,
                grpc-context,
                grpc-core,
                grpc-netty-shaded,
                grpc-protobuf,
                grpc-protobuf-lite,
                guava,
                j2objc-annotations,
                jsr305,
                kotlin-logging,
                kotlin-stdlib,
                kotlin-stdlib-common,
                listenablefuture,
                perfmark-api,
                proto-google-common-protos,
                slf4j-api,
                xodus-compress,
                xodus-environment,
                xodus-openAPI,
                xodus-utils,
              </excludeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
		<groupId>io.fabric8</groupId>
  		<artifactId>docker-maven-plugin</artifactId>
  		<version>0.46.0</version>
	    <configuration>
		  <images>
		    <image>
		      <name>hotmoka/mokamint-node:${hotmoka.version}</name>
		      <build>
		        <contextDir>../../..</contextDir>
		        <dockerFile>src/main/docker/mokamint-node/mokamint-node</dockerFile>
                <createImageOptions>
                  <platform>linux/amd64</platform>
                </createImageOptions>
		      </build>
			</image>
			<image>
		      <name>hotmoka/mokamint-node-arm64:${hotmoka.version}</name>
		      <build>
		        <contextDir>../../..</contextDir>
		        <dockerFile>src/main/docker/mokamint-node/mokamint-node-arm64</dockerFile>
                <createImageOptions>
                  <platform>linux/arm64</platform>
                </createImageOptions>
		      </build>
			</image>
		  </images>
  		</configuration>
  		<!-- Adding this part always executes the docker:build during Maven's package phase.
             No need to execute above mentioned command. -->
        <executions>
          <execution>
            <id>docker:build</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
	  </plugin>
    </plugins>
  </build>

  <profiles>
	<profile>
	  <id>release</id>
      <build>
        <plugins>
		  <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
	    </plugins>
      </build>
    </profile>
  </profiles>

</project>