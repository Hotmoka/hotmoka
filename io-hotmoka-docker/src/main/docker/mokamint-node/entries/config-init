#!/bin/bash

# This script creates the configuration directory of a Hotmoka node based on Mokamint, for starting the first node
# of a newly initialized blockchain. The configuration directory will have the following structure:
#
# node.pem
# plot.plot
# mokamint_config.toml
# local_config.toml
# consensus_config.toml
#
# where:
# 1) node.pem is a key pair with empty password
# 2) plot.plot uses node.pem as key for signing the blocks, the provided public key as key for signing the deadlines and the chain identifier in mokamint_config.toml
# 3) options not explicitly reported in the three toml configuration files hold, implicitly, default values

RED='\033[0;31m'
BOLD_GREEN='\033[1;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

ALLOWS_UNSIGNED_FAUCET=${ALLOWS_UNSIGNED_FAUCET:-false}
CHAIN_ID=${CHAIN_ID:-""}
INITIAL_SUPPLY=${INITIAL_SUPPLY:-10000000000000000000000000000}
FINAL_SUPPLY=${FINAL_SUPPLY:-1000000000000000000000000000000}
PLOT_SIZE=${PLOT_SIZE:-1000}
PUBLIC_KEY_GAMETE=${PUBLIC_KEY_GAMETE:-""}
PUBLIC_KEY_MINER_BASE58=${PUBLIC_KEY_MINER_BASE58:-""}
TARGET_BLOCK_CREATION_TIME=${TARGET_BLOCK_CREATION_TIME:-10000}

echo -e "${BOLD_GREEN}I will use the following parameters for the creation of the configuration directory of a Hotmoka node using Mokamint as proof of space consensus engine:${NC}"
echo
echo -e "      ${BLUE}ALLOWS_UNSIGNED_FAUCET${NC}=${RED}$ALLOWS_UNSIGNED_FAUCET${NC}"
echo -e "                    ${BLUE}CHAIN_ID${NC}=${RED}\"$CHAIN_ID\"${NC}"
echo -e "              ${BLUE}INITIAL_SUPPLY${NC}=${RED}\"$INITIAL_SUPPLY\"${NC}"
echo -e "                ${BLUE}FINAL_SUPPLY${NC}=${RED}\"$FINAL_SUPPLY\"${NC}"
echo -e "                   ${BLUE}PLOT_SIZE${NC}=${RED}$PLOT_SIZE${NC}"
echo -e "    ${BLUE}PUBLIC_KEY_GAMETE_BASE64${NC}=${RED}\"$PUBLIC_KEY_GAMETE_BASE64\"${NC}"
echo -e "     ${BLUE}PUBLIC_KEY_MINER_BASE58${NC}=${RED}\"$PUBLIC_KEY_MINER_BASE58\"${NC}"
echo -e "  ${BLUE}TARGET_BLOCK_CREATION_TIME${NC}=${RED}$TARGET_BLOCK_CREATION_TIME${NC}"
echo

echo -n "Cleaning the directory hotmoka_mokamint... "
rm -rf hotmoka_mokamint/*
echo -e "${RED}done${NC}"

echo -n "Creating the node.pem key pair for signing the blocks: "
moka keys create --output-dir=hotmoka_mokamint --name=node.pem --password --json --redirection node_key_creation.json
PUBLIC_KEY_NODE_BASE58=$(cat node_key_creation.json | python3 -c "import sys, json; print(json.load(sys.stdin)['publicKeyBase58'])")
rm node_key_creation.json
chmod og-rwx hotmoka_mokamint/node.pem
echo -e "${RED}done:${NC} the public key is ${BOLD_GREEN}${PUBLIC_KEY_NODE_BASE58}${NC} (ed25519, base58)"

echo -n "Creating the local Hotmoka node configuration file... "
touch hotmoka_mokamint/local_config.toml
echo -e "${RED}done${NC}"

echo -n "Creating the consensus Hotmoka node configuration file... "
echo "allows_unsigned_faucet = ${ALLOWS_UNSIGNED_FAUCET}" > hotmoka_mokamint/consensus_config.toml
echo "chain_id = \"${CHAIN_ID}\"" >> hotmoka_mokamint/consensus_config.toml
echo "initial_supply = \"${INITIAL_SUPPLY}\"" >> hotmoka_mokamint/consensus_config.toml
echo "final_supply = \"${FINAL_SUPPLY}\"" >> hotmoka_mokamint/consensus_config.toml
echo "public_key_of_gamete = \"${PUBLIC_KEY_GAMETE_BASE64}\"" >> hotmoka_mokamint/consensus_config.toml
echo -e "${RED}done${NC}"

echo -n "Creating the Mokamint configuration file... "
echo "chain_id = \"${CHAIN_ID}\"" > hotmoka_mokamint/mokamint_config.toml
echo "target_block_creation_time = ${TARGET_BLOCK_CREATION_TIME}" >> hotmoka_mokamint/mokamint_config.toml
echo -e "${RED}done${NC}"

echo "Creating a plot file for the miner, containing ${PLOT_SIZE} nonces, for the chain id \"${CHAIN_ID}\", for a node with public key ${PUBLIC_KEY_NODE_BASE58} (ed25519, base58), for a miner with public key ${PUBLIC_KEY_MINER_BASE58} (ed25519, base58)..."
mokamint-plotter create hotmoka_mokamint/plot.plot 0 $PLOT_SIZE "$CHAIN_ID" $PUBLIC_KEY_NODE_BASE58 $PUBLIC_KEY_MINER_BASE58
echo -e "${RED}done${NC}"