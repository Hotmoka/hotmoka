#!/bin/bash

# This script creates the configuration directory of a Hotmoka node, for starting the first node
# of a newly initialized blockchain. The configuration directory will have the following structure:
#
# miner.pem
# node.pem
# plot.plot
# mokamint_config.toml
# local_config.toml
# consensus_config.toml
#
# where:
# 1) miner.pem and node.pem are key pairs with empty password
# 2) plot.plot uses node.pem as key for signing the blocks, miner.pem as key for signing the deadlines and the chain identifier in mokamint_config.toml
# 3) options not explicitly reported in the three toml configuration files hold, implicitly, default values

ALLOWS_UNSIGNED_FAUCET=${ALLOWS_UNSIGNED_FAUCET:-false}
CHAIN_ID=${CHAIN_ID:-""}
INITIAL_SUPPLY=${INITIAL_SUPPLY:-1000000000000000000000000000000000}
FINAL_SUPPLY=${FINAL_SUPPLY:-10000000000000000000000000000000000}
PLOT_SIZE=${PLOT_SIZE:-1000}
PUBLIC_KEY_OF_GAMETE=${PUBLIC_KEY_OF_GAMETE:-""}
TARGET_BLOCK_CREATION_TIME=${TARGET_BLOCK_CREATION_TIME:-10000}

echo
echo "I will use the following parameters for the creation of the configuration directory of a Hotmoka Mokamint node:"
echo
echo "      ALLOWS_UNSIGNED_FAUCET=$ALLOWS_UNSIGNED_FAUCET"
echo "                    CHAIN_ID=\"$CHAIN_ID\""
echo "              INITIAL_SUPPLY=\"$INITIAL_SUPPLY\""
echo "                FINAL_SUPPLY=\"$FINAL_SUPPLY\""
echo "                   PLOT_SIZE=$PLOT_SIZE"
echo "        PUBLIC_KEY_OF_GAMETE=\"$PUBLIC_KEY_OF_GAMETE\""
echo "  TARGET_BLOCK_CREATION_TIME=$TARGET_BLOCK_CREATION_TIME"
echo

echo -n "Creating the directory hotmoka_mokamint... "
mkdir hotmoka_mokamint
echo "done"

echo -n "Creating the node.pem key pair for signing the blocks... "
PUBLIC_KEY_NODE_BASE58=$(moka-no-logs keys create --output-dir=hotmoka_mokamint --name=node.pem --json | python3 -c "import sys, json; print(json.load(sys.stdin)['publicKeyBase58'])")
echo "done"

echo -n "Creating the miner.pem key pair for signing the deadlines... "
PUBLIC_KEY_MINER_BASE58=$(moka-no-logs keys create --output-dir=hotmoka_mokamint --name=miner.pem --json | python3 -c "import sys, json; print(json.load(sys.stdin)['publicKeyBase58'])")
echo "done"

echo -n "Creating the local Hotmoka node configuration file... "
touch hotmoka_mokamint/local_config.toml
echo "done"

echo -n "Creating the consensus Hotmoka node configuration file... "
echo "allows_unsigned_faucet = ${ALLOWS_UNSIGNED_FAUCET}" > hotmoka_mokamint/consensus_config.toml
echo "chain_id = \"${CHAIN_ID}\"" >> hotmoka_mokamint/consensus_config.toml
echo "initial_supply = \"${INITIAL_SUPPLY}\"" >> hotmoka_mokamint/consensus_config.toml
echo "final_supply = \"${FINAL_SUPPLY}\"" >> hotmoka_mokamint/consensus_config.toml
echo "public_key_of_gamete = \"${PUBLIC_KEY_OF_GAMETE}\"" >> hotmoka_mokamint/consensus_config.toml
echo "done"

echo -n "Creating the Mokamint configuration file... "
echo "chain_id = \"${CHAIN_ID}\"" > hotmoka_mokamint/mokamint_config.toml
echo "target_block_creation_time = ${TARGET_BLOCK_CREATION_TIME}" >> hotmoka_mokamint/mokamint_config.toml
echo "done"

echo "Creating a plot file for the miner, containing ${PLOT_SIZE} nonces..."
mokamint-plotter-no-logs create hotmoka_mokamint/plot.plot 0 $PLOT_SIZE "$CHAIN_ID" $PUBLIC_KEY_NODE_BASE58 $PUBLIC_KEY_MINER_BASE58
echo "done"

echo
echo "You can now copy the configuration directory into your local file system with:"
echo "  docker cp THIS_DOCKER_ID:/home/hotmoka/hotmoka_mokamint ."